{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "startPayout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_player",
          "type": "address"
        }
      ],
      "name": "addPlayer",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_winner",
          "type": "address"
        }
      ],
      "name": "addWinner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberPlayers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "payWinners",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "players",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "winners",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051806040016040528060078152602001662237b3a1b7b4b760c91b81525060405180604001604052806003815260200162444f4760e81b81525081600390816200005f91906200011c565b5060046200006e82826200011c565b505050620001e8565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000a257607f821691505b602082108103620000c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011757600081815260208120601f850160051c81016020861015620000f25750805b601f850160051c820191505b818110156200011357828155600101620000fe565b5050505b505050565b81516001600160401b0381111562000138576200013862000077565b62000150816200014984546200008d565b84620000c9565b602080601f8311600181146200018857600084156200016f5750858301515b600019600386901b1c1916600185901b17855562000113565b600085815260208120601f198616915b82811015620001b95788860151825594840194600190910190840162000198565b5085821015620001d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610d4280620001f86000396000f3fe6080604052600436106101445760003560e01c806370a08231116100c0578063a9059cbb11610074578063c42b42a011610059578063c42b42a0146103bc578063dd62ed3e146103d2578063f71d96cb1461041857600080fd5b8063a9059cbb14610389578063b1275f9a146103a957600080fd5b806395d89b41116100a557806395d89b411461031c578063a2fb117514610331578063a457c2d71461036957600080fd5b806370a08231146102c657806386e34bc1146102fc57600080fd5b8063297f407b1161011757806339509351116100fc578063395093511461027b57806349a2aaca1461029b57806363bd1d4a146102b157600080fd5b8063297f407b146101e3578063313ce5671461025f57600080fd5b806306fdde0314610149578063095ea7b31461017457806318160ddd146101a457806323b872dd146101c3575b600080fd5b34801561015557600080fd5b5061015e610438565b60405161016b9190610b12565b60405180910390f35b34801561018057600080fd5b5061019461018f366004610b75565b6104ca565b604051901515815260200161016b565b3480156101b057600080fd5b506002545b60405190815260200161016b565b3480156101cf57600080fd5b506101946101de366004610ba1565b6104e4565b3480156101ef57600080fd5b5061025d6101fe366004610be2565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b005b34801561026b57600080fd5b506040516012815260200161016b565b34801561028757600080fd5b50610194610296366004610b75565b610508565b3480156102a757600080fd5b506101b560065481565b3480156102bd57600080fd5b5061025d610547565b3480156102d257600080fd5b506101b56102e1366004610be2565b6001600160a01b031660009081526020819052604090205490565b34801561030857600080fd5b5061025d610317366004610c06565b610570565b34801561032857600080fd5b5061015e6105d6565b34801561033d57600080fd5b5061035161034c366004610c06565b6105e5565b6040516001600160a01b03909116815260200161016b565b34801561037557600080fd5b50610194610384366004610b75565b61060f565b34801561039557600080fd5b506101946103a4366004610b75565b6106be565b61025d6103b7366004610be2565b6106cc565b3480156103c857600080fd5b506101b560055481565b3480156103de57600080fd5b506101b56103ed366004610c1f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561042457600080fd5b50610351610433366004610c06565b610779565b60606003805461044790610c58565b80601f016020809104026020016040519081016040528092919081815260200182805461047390610c58565b80156104c05780601f10610495576101008083540402835291602001916104c0565b820191906000526020600020905b8154815290600101906020018083116104a357829003601f168201915b5050505050905090565b6000336104d8818585610789565b60019150505b92915050565b6000336104f28582856108ad565b6104fd85858561093f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906104d89082908690610542908790610ca8565b610789565b4760640361056e5760085460009061056190606490610cbb565b905061056c81610570565b505b565b60005b60085481116105d2576008818154811061058f5761058f610cdd565b60009182526020822001546040516001600160a01b039091169184156108fc02918591818181858888f193505050505080806105ca90610cf3565b915050610573565b5050565b60606004805461044790610c58565b600881815481106105f557600080fd5b6000918252602090912001546001600160a01b0316905081565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156106b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104fd8286868403610789565b6000336104d881858561093f565b3460010361072d57600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555b6006805490600061073d83610cf3565b919050555060c8600654111561056c576040517fd8e8545d90a0fc949f9fa79975953750d664b3eb37074e23a481d15736e7727a90600090a150565b600781815481106105f557600080fd5b6001600160a01b0383166107eb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106a8565b6001600160a01b03821661084c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106a8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610939578181101561092c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106a8565b6109398484848403610789565b50505050565b6001600160a01b0383166109bb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106a8565b6001600160a01b038216610a1d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106a8565b6001600160a01b03831660009081526020819052604090205481811015610aac5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106a8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610939565b600060208083528351808285015260005b81811015610b3f57858101830151858201604001528201610b23565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461056c57600080fd5b60008060408385031215610b8857600080fd5b8235610b9381610b60565b946020939093013593505050565b600080600060608486031215610bb657600080fd5b8335610bc181610b60565b92506020840135610bd181610b60565b929592945050506040919091013590565b600060208284031215610bf457600080fd5b8135610bff81610b60565b9392505050565b600060208284031215610c1857600080fd5b5035919050565b60008060408385031215610c3257600080fd5b8235610c3d81610b60565b91506020830135610c4d81610b60565b809150509250929050565b600181811c90821680610c6c57607f821691505b602082108103610c8c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104de576104de610c92565b600082610cd857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610d0557610d05610c92565b506001019056fea2646970667358221220d043051563f7cacc873c5a8e5d59805845b7d8a9eb04e1a9ec637d26479b378964736f6c63430008130033",
    "sourceMap": "113:938:11:-:0;;;319:40;;;;;;;;;;1980:113:14;;;;;;;;;;;;;-1:-1:-1;;;1980:113:14;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:14;;;2054:5;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:14;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;113:938:11;;14:127:27;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:27;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:27;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:27;;;2580:26;2531:89;-1:-1:-1;;1335:1:27;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:27;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:27;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:27;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:27:o;:::-;113:938:11;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101445760003560e01c806370a08231116100c0578063a9059cbb11610074578063c42b42a011610059578063c42b42a0146103bc578063dd62ed3e146103d2578063f71d96cb1461041857600080fd5b8063a9059cbb14610389578063b1275f9a146103a957600080fd5b806395d89b41116100a557806395d89b411461031c578063a2fb117514610331578063a457c2d71461036957600080fd5b806370a08231146102c657806386e34bc1146102fc57600080fd5b8063297f407b1161011757806339509351116100fc578063395093511461027b57806349a2aaca1461029b57806363bd1d4a146102b157600080fd5b8063297f407b146101e3578063313ce5671461025f57600080fd5b806306fdde0314610149578063095ea7b31461017457806318160ddd146101a457806323b872dd146101c3575b600080fd5b34801561015557600080fd5b5061015e610438565b60405161016b9190610b12565b60405180910390f35b34801561018057600080fd5b5061019461018f366004610b75565b6104ca565b604051901515815260200161016b565b3480156101b057600080fd5b506002545b60405190815260200161016b565b3480156101cf57600080fd5b506101946101de366004610ba1565b6104e4565b3480156101ef57600080fd5b5061025d6101fe366004610be2565b600880546001810182556000919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee301805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b005b34801561026b57600080fd5b506040516012815260200161016b565b34801561028757600080fd5b50610194610296366004610b75565b610508565b3480156102a757600080fd5b506101b560065481565b3480156102bd57600080fd5b5061025d610547565b3480156102d257600080fd5b506101b56102e1366004610be2565b6001600160a01b031660009081526020819052604090205490565b34801561030857600080fd5b5061025d610317366004610c06565b610570565b34801561032857600080fd5b5061015e6105d6565b34801561033d57600080fd5b5061035161034c366004610c06565b6105e5565b6040516001600160a01b03909116815260200161016b565b34801561037557600080fd5b50610194610384366004610b75565b61060f565b34801561039557600080fd5b506101946103a4366004610b75565b6106be565b61025d6103b7366004610be2565b6106cc565b3480156103c857600080fd5b506101b560055481565b3480156103de57600080fd5b506101b56103ed366004610c1f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b34801561042457600080fd5b50610351610433366004610c06565b610779565b60606003805461044790610c58565b80601f016020809104026020016040519081016040528092919081815260200182805461047390610c58565b80156104c05780601f10610495576101008083540402835291602001916104c0565b820191906000526020600020905b8154815290600101906020018083116104a357829003601f168201915b5050505050905090565b6000336104d8818585610789565b60019150505b92915050565b6000336104f28582856108ad565b6104fd85858561093f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906104d89082908690610542908790610ca8565b610789565b4760640361056e5760085460009061056190606490610cbb565b905061056c81610570565b505b565b60005b60085481116105d2576008818154811061058f5761058f610cdd565b60009182526020822001546040516001600160a01b039091169184156108fc02918591818181858888f193505050505080806105ca90610cf3565b915050610573565b5050565b60606004805461044790610c58565b600881815481106105f557600080fd5b6000918252602090912001546001600160a01b0316905081565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156106b15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6104fd8286868403610789565b6000336104d881858561093f565b3460010361072d57600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790555b6006805490600061073d83610cf3565b919050555060c8600654111561056c576040517fd8e8545d90a0fc949f9fa79975953750d664b3eb37074e23a481d15736e7727a90600090a150565b600781815481106105f557600080fd5b6001600160a01b0383166107eb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106a8565b6001600160a01b03821661084c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106a8565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610939578181101561092c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106a8565b6109398484848403610789565b50505050565b6001600160a01b0383166109bb5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016106a8565b6001600160a01b038216610a1d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106a8565b6001600160a01b03831660009081526020819052604090205481811015610aac5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016106a8565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610939565b600060208083528351808285015260005b81811015610b3f57858101830151858201604001528201610b23565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461056c57600080fd5b60008060408385031215610b8857600080fd5b8235610b9381610b60565b946020939093013593505050565b600080600060608486031215610bb657600080fd5b8335610bc181610b60565b92506020840135610bd181610b60565b929592945050506040919091013590565b600060208284031215610bf457600080fd5b8135610bff81610b60565b9392505050565b600060208284031215610c1857600080fd5b5035919050565b60008060408385031215610c3257600080fd5b8235610c3d81610b60565b91506020830135610c4d81610b60565b809150509250929050565b600181811c90821680610c6c57607f821691505b602082108103610c8c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104de576104de610c92565b600082610cd857634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060018201610d0557610d05610c92565b506001019056fea2646970667358221220d043051563f7cacc873c5a8e5d59805845b7d8a9eb04e1a9ec637d26479b378964736f6c63430008130033",
    "sourceMap": "113:938:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:14;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;;;;;-1:-1:-1;4444:197:14;;;;;:::i;:::-;;:::i;:::-;;;1211:14:27;;1204:22;1186:41;;1174:2;1159:18;4444:197:14;1046:187:27;3255:106:14;;;;;;;;;;-1:-1:-1;3342:12:14;;3255:106;;;1384:25:27;;;1372:2;1357:18;3255:106:14;1238:177:27;5203:256:14;;;;;;;;;;-1:-1:-1;5203:256:14;;;;;:::i;:::-;;:::i;614:89:11:-;;;;;;;;;;-1:-1:-1;614:89:11;;;;;:::i;:::-;675:7;:21;;;;;;;-1:-1:-1;675:21:11;;;;;;;;-1:-1:-1;;675:21:11;-1:-1:-1;;;;;675:21:11;;;;;;;;;;614:89;;;3104:91:14;;;;;;;;;;-1:-1:-1;3104:91:14;;3186:2;2283:36:27;;2271:2;2256:18;3104:91:14;2141:184:27;5854:234:14;;;;;;;;;;-1:-1:-1;5854:234:14;;;;;:::i;:::-;;:::i;182:28:11:-;;;;;;;;;;;;;;;;709:179;;;;;;;;;;;;;:::i;3419:125:14:-;;;;;;;;;;-1:-1:-1;3419:125:14;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:14;3493:7;3519:18;;;;;;;;;;;;3419:125;894:155:11;;;;;;;;;;-1:-1:-1;894:155:11;;;;;:::i;:::-;;:::i;2369:102:14:-;;;;;;;;;;;;;:::i;254:32:11:-;;;;;;;;;;-1:-1:-1;254:32:11;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2947:55:27;;;2929:74;;2917:2;2902:18;254:32:11;2767:242:27;6575:427:14;;;;;;;;;;-1:-1:-1;6575:427:14;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;;;;;-1:-1:-1;3740:189:14;;;;;:::i;:::-;;:::i;365:243:11:-;;;;;;:::i;:::-;;:::i;149:27::-;;;;;;;;;;;;;;;;3987:149:14;;;;;;;;;;-1:-1:-1;3987:149:14;;;;;:::i;:::-;-1:-1:-1;;;;;4102:18:14;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149;216:32:11;;;;;;;;;;-1:-1:-1;216:32:11;;;;;:::i;:::-;;:::i;2158:98:14:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:17;4581:32:14;719:10:17;4597:7:14;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:17;5356:38:14;5372:4;719:10:17;5387:6:14;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:14;;5203:256;-1:-1:-1;;;;5203:256:14:o;5854:234::-;719:10:17;5942:4:14;4102:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4102:27:14;;;;;;;;;;5942:4;;719:10:17;5996:64:14;;719:10:17;;4102:27:14;;6021:38;;6049:10;;6021:38;:::i;:::-;5996:8;:64::i;709:179:11:-;748:21;773:3;748:28;744:138;;814:7;:14;792:19;;814:20;;831:3;;814:20;:::i;:::-;792:42;;848:23;859:11;848:10;:23::i;:::-;778:104;744:138;709:179::o;894:155::-;953:9;948:95;973:7;:14;968:19;;948:95;;1008:7;1016:1;1008:10;;;;;;;;:::i;:::-;;;;;;;;;;:24;;-1:-1:-1;;;;;1008:10:11;;;;:24;;;;;1024:7;;1008:24;:10;:24;1024:7;1008:10;:24;;;;;;;;989:3;;;;;:::i;:::-;;;;948:95;;;;894:155;:::o;2369:102:14:-;2425:13;2457:7;2450:14;;;;;:::i;254:32:11:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;254:32:11;;-1:-1:-1;254:32:11;:::o;6575:427:14:-;719:10:17;6668:4:14;4102:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4102:27:14;;;;;;;;;;6668:4;;719:10:17;6812:15:14;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:14;;4750:2:27;6784:85:14;;;4732:21:27;4789:2;4769:18;;;4762:30;4828:34;4808:18;;;4801:62;4899:7;4879:18;;;4872:35;4924:19;;6784:85:14;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:17;3873:28:14;719:10:17;3890:2:14;3894:6;3873:9;:28::i;365:243:11:-;438:9;451:1;438:14;434:66;;468:7;:21;;;;;;;-1:-1:-1;468:21:11;;;;;;;;-1:-1:-1;;468:21:11;-1:-1:-1;;;;;468:21:11;;;;;434:66;509:13;:15;;;:13;:15;;;:::i;:::-;;;;;;554:3;538:13;;:19;534:68;;;578:13;;;;;;;365:243;:::o;216:32::-;;;;;;;;;;;;10457:340:14;-1:-1:-1;;;;;10558:19:14;;10550:68;;;;-1:-1:-1;;;10550:68:14;;5156:2:27;10550:68:14;;;5138:21:27;5195:2;5175:18;;;5168:30;5234:34;5214:18;;;5207:62;-1:-1:-1;;;5285:18:27;;;5278:34;5329:19;;10550:68:14;4954:400:27;10550:68:14;-1:-1:-1;;;;;10636:21:14;;10628:68;;;;-1:-1:-1;;;10628:68:14;;5561:2:27;10628:68:14;;;5543:21:27;5600:2;5580:18;;;5573:30;5639:34;5619:18;;;5612:62;-1:-1:-1;;;5690:18:27;;;5683:32;5732:19;;10628:68:14;5359:398:27;10628:68:14;-1:-1:-1;;;;;10707:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1384:25:27;;;10758:32:14;;1357:18:27;10758:32:14;;;;;;;10457:340;;;:::o;11078:411::-;-1:-1:-1;;;;;4102:18:14;;;11178:24;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11244:37:14;;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:14;;5964:2:27;11297:68:14;;;5946:21:27;6003:2;5983:18;;;5976:30;6042:31;6022:18;;;6015:59;6091:18;;11297:68:14;5762:353:27;11297:68:14;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:14;;7544:68;;;;-1:-1:-1;;;7544:68:14;;6322:2:27;7544:68:14;;;6304:21:27;6361:2;6341:18;;;6334:30;6400:34;6380:18;;;6373:62;6471:7;6451:18;;;6444:35;6496:19;;7544:68:14;6120:401:27;7544:68:14;-1:-1:-1;;;;;7630:16:14;;7622:64;;;;-1:-1:-1;;;7622:64:14;;6728:2:27;7622:64:14;;;6710:21:27;6767:2;6747:18;;;6740:30;6806:34;6786:18;;;6779:62;-1:-1:-1;;;6857:18:27;;;6850:33;6900:19;;7622:64:14;6526:399:27;7622:64:14;-1:-1:-1;;;;;7768:15:14;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:14;;7132:2:27;7793:72:14;;;7114:21:27;7171:2;7151:18;;;7144:30;7210:34;7190:18;;;7183:62;7281:8;7261:18;;;7254:36;7307:19;;7793:72:14;6930:402:27;7793:72:14;-1:-1:-1;;;;;7899:15:14;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1384:25:27;;;8114:13:14;;8163:26;;1357:18:27;8163:26:14;;;;;;;8200:37;12073:91;14:548:27;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:154::-;-1:-1:-1;;;;;646:5:27;642:54;635:5;632:65;622:93;;711:1;708;701:12;726:315;794:6;802;855:2;843:9;834:7;830:23;826:32;823:52;;;871:1;868;861:12;823:52;910:9;897:23;929:31;954:5;929:31;:::i;:::-;979:5;1031:2;1016:18;;;;1003:32;;-1:-1:-1;;;726:315:27:o;1420:456::-;1497:6;1505;1513;1566:2;1554:9;1545:7;1541:23;1537:32;1534:52;;;1582:1;1579;1572:12;1534:52;1621:9;1608:23;1640:31;1665:5;1640:31;:::i;:::-;1690:5;-1:-1:-1;1747:2:27;1732:18;;1719:32;1760:33;1719:32;1760:33;:::i;:::-;1420:456;;1812:7;;-1:-1:-1;;;1866:2:27;1851:18;;;;1838:32;;1420:456::o;1881:255::-;1948:6;2001:2;1989:9;1980:7;1976:23;1972:32;1969:52;;;2017:1;2014;2007:12;1969:52;2056:9;2043:23;2075:31;2100:5;2075:31;:::i;:::-;2125:5;1881:255;-1:-1:-1;;;1881:255:27:o;2582:180::-;2641:6;2694:2;2682:9;2673:7;2669:23;2665:32;2662:52;;;2710:1;2707;2700:12;2662:52;-1:-1:-1;2733:23:27;;2582:180;-1:-1:-1;2582:180:27:o;3014:388::-;3082:6;3090;3143:2;3131:9;3122:7;3118:23;3114:32;3111:52;;;3159:1;3156;3149:12;3111:52;3198:9;3185:23;3217:31;3242:5;3217:31;:::i;:::-;3267:5;-1:-1:-1;3324:2:27;3309:18;;3296:32;3337:33;3296:32;3337:33;:::i;:::-;3389:7;3379:17;;;3014:388;;;;;:::o;3407:380::-;3486:1;3482:12;;;;3529;;;3550:61;;3604:4;3596:6;3592:17;3582:27;;3550:61;3657:2;3649:6;3646:14;3626:18;3623:38;3620:161;;3703:10;3698:3;3694:20;3691:1;3684:31;3738:4;3735:1;3728:15;3766:4;3763:1;3756:15;3620:161;;3407:380;;;:::o;3792:127::-;3853:10;3848:3;3844:20;3841:1;3834:31;3884:4;3881:1;3874:15;3908:4;3905:1;3898:15;3924:125;3989:9;;;4010:10;;;4007:36;;;4023:18;;:::i;4054:217::-;4094:1;4120;4110:132;;4164:10;4159:3;4155:20;4152:1;4145:31;4199:4;4196:1;4189:15;4227:4;4224:1;4217:15;4110:132;-1:-1:-1;4256:9:27;;4054:217::o;4276:127::-;4337:10;4332:3;4328:20;4325:1;4318:31;4368:4;4365:1;4358:15;4392:4;4389:1;4382:15;4408:135;4447:3;4468:17;;;4465:43;;4488:18;;:::i;:::-;-1:-1:-1;4535:1:27;4524:13;;4408:135::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addPlayer(address)": "b1275f9a",
    "addWinner(address)": "297f407b",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "currentPrize()": "c42b42a0",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "numberPlayers()": "49a2aaca",
    "payWinners(uint256)": "86e34bc1",
    "payout()": "63bd1d4a",
    "players(uint256)": "f71d96cb",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "winners(uint256)": "a2fb1175"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"startPayout\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_player\",\"type\":\"address\"}],\"name\":\"addPlayer\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_winner\",\"type\":\"address\"}],\"name\":\"addWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"payWinners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"winners\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Week3/DogCoinGame.sol\":\"DogCoinGame\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=node_modules/forge-std/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solady/=lib/solady/\"]},\"sources\":{\"contracts/Week3/DogCoinGame.sol\":{\"keccak256\":\"0x81bb6bbbd2c9d1a1197985567dc8f7974faccc781eb9d0fb943386f4d5823057\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e61a39cc8a252b8d190bced1338e67442ff8f0a3f59115f3b141536ad2892f6\",\"dweb:/ipfs/Qmeyw99qPGdPLeaE993LdwENAArFKe5qHVKWC41jSMbDo6\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "type": "event",
          "name": "startPayout",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_player",
              "type": "address"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "addPlayer"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_winner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addWinner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentPrize",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "numberPlayers",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "payWinners"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "payout"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "players",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "winners",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=node_modules/forge-std/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solady/=lib/solady/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Week3/DogCoinGame.sol": "DogCoinGame"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Week3/DogCoinGame.sol": {
        "keccak256": "0x81bb6bbbd2c9d1a1197985567dc8f7974faccc781eb9d0fb943386f4d5823057",
        "urls": [
          "bzz-raw://1e61a39cc8a252b8d190bced1338e67442ff8f0a3f59115f3b141536ad2892f6",
          "dweb:/ipfs/Qmeyw99qPGdPLeaE993LdwENAArFKe5qHVKWC41jSMbDo6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Week3/DogCoinGame.sol",
    "id": 1188,
    "exportedSymbols": {
      "Context": [
        4221
      ],
      "DogCoinGame": [
        1187
      ],
      "ERC20": [
        4096
      ],
      "IERC20": [
        4174
      ],
      "IERC20Metadata": [
        4199
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1019:11",
    "nodes": [
      {
        "id": 1072,
        "nodeType": "PragmaDirective",
        "src": "32:23:11",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 1073,
        "nodeType": "ImportDirective",
        "src": "56:55:11",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1188,
        "sourceUnit": 4097,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1187,
        "nodeType": "ContractDefinition",
        "src": "113:938:11",
        "nodes": [
          {
            "id": 1077,
            "nodeType": "VariableDeclaration",
            "src": "149:27:11",
            "nodes": [],
            "constant": false,
            "functionSelector": "c42b42a0",
            "mutability": "mutable",
            "name": "currentPrize",
            "nameLocation": "164:12:11",
            "scope": 1187,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1076,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "149:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1079,
            "nodeType": "VariableDeclaration",
            "src": "182:28:11",
            "nodes": [],
            "constant": false,
            "functionSelector": "49a2aaca",
            "mutability": "mutable",
            "name": "numberPlayers",
            "nameLocation": "197:13:11",
            "scope": 1187,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1078,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "182:7:11",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1082,
            "nodeType": "VariableDeclaration",
            "src": "216:32:11",
            "nodes": [],
            "constant": false,
            "functionSelector": "f71d96cb",
            "mutability": "mutable",
            "name": "players",
            "nameLocation": "241:7:11",
            "scope": 1187,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 1080,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "216:15:11",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 1081,
              "nodeType": "ArrayTypeName",
              "src": "216:17:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1085,
            "nodeType": "VariableDeclaration",
            "src": "254:32:11",
            "nodes": [],
            "constant": false,
            "functionSelector": "a2fb1175",
            "mutability": "mutable",
            "name": "winners",
            "nameLocation": "279:7:11",
            "scope": 1187,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 1083,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "254:15:11",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 1084,
              "nodeType": "ArrayTypeName",
              "src": "254:17:11",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1087,
            "nodeType": "EventDefinition",
            "src": "293:20:11",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "d8e8545d90a0fc949f9fa79975953750d664b3eb37074e23a481d15736e7727a",
            "name": "startPayout",
            "nameLocation": "299:11:11",
            "parameters": {
              "id": 1086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:11"
            }
          },
          {
            "id": 1095,
            "nodeType": "FunctionDefinition",
            "src": "319:40:11",
            "nodes": [],
            "body": {
              "id": 1094,
              "nodeType": "Block",
              "src": "357:2:11",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "446f67436f696e",
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "339:9:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_d7c520a8a5539511235b08745d8fe2a3a44986d0a46a0c559b13be3196ab57f3",
                      "typeString": "literal_string \"DogCoin\""
                    },
                    "value": "DogCoin"
                  },
                  {
                    "hexValue": "444f47",
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "350:5:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_b5b35d1f7dc7cf1448a70456de4980702e1fdae4e057d31003c0e1e4b3c4bde2",
                      "typeString": "literal_string \"DOG\""
                    },
                    "value": "DOG"
                  }
                ],
                "id": 1092,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1089,
                  "name": "ERC20",
                  "nameLocations": [
                    "333:5:11"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4096,
                  "src": "333:5:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "333:23:11"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:2:11"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:11"
            },
            "scope": 1187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1124,
            "nodeType": "FunctionDefinition",
            "src": "365:243:11",
            "nodes": [],
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "424:184:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "438:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "442:5:11",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "438:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "451:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "438:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1111,
                  "nodeType": "IfStatement",
                  "src": "434:66:11",
                  "trueBody": {
                    "id": 1110,
                    "nodeType": "Block",
                    "src": "454:46:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1107,
                              "name": "_player",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1097,
                              "src": "481:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 1104,
                              "name": "players",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1082,
                              "src": "468:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 1106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "476:4:11",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "468:12:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                              "typeString": "function (address payable[] storage pointer,address payable)"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "468:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1109,
                        "nodeType": "ExpressionStatement",
                        "src": "468:21:11"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "509:15:11",
                    "subExpression": {
                      "id": 1112,
                      "name": "numberPlayers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "509:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1114,
                  "nodeType": "ExpressionStatement",
                  "src": "509:15:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1115,
                      "name": "numberPlayers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "538:13:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "323030",
                      "id": 1116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "554:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200_by_1",
                        "typeString": "int_const 200"
                      },
                      "value": "200"
                    },
                    "src": "538:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1122,
                  "nodeType": "IfStatement",
                  "src": "534:68:11",
                  "trueBody": {
                    "id": 1121,
                    "nodeType": "Block",
                    "src": "559:43:11",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1118,
                            "name": "startPayout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1087,
                            "src": "578:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1119,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "578:13:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1120,
                        "nodeType": "EmitStatement",
                        "src": "573:18:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "b1275f9a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addPlayer",
            "nameLocation": "374:9:11",
            "parameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "mutability": "mutable",
                  "name": "_player",
                  "nameLocation": "400:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "384:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "384:15:11",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "383:25:11"
            },
            "returnParameters": {
              "id": 1099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "424:0:11"
            },
            "scope": 1187,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1136,
            "nodeType": "FunctionDefinition",
            "src": "614:89:11",
            "nodes": [],
            "body": {
              "id": 1135,
              "nodeType": "Block",
              "src": "665:38:11",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1132,
                        "name": "_winner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1126,
                        "src": "688:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 1129,
                        "name": "winners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "675:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "683:4:11",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "675:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "675:21:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1134,
                  "nodeType": "ExpressionStatement",
                  "src": "675:21:11"
                }
              ]
            },
            "functionSelector": "297f407b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addWinner",
            "nameLocation": "623:9:11",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nameLocation": "649:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1136,
                  "src": "633:23:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "633:15:11",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:25:11"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "665:0:11"
            },
            "scope": 1187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1160,
            "nodeType": "FunctionDefinition",
            "src": "709:179:11",
            "nodes": [],
            "body": {
              "id": 1159,
              "nodeType": "Block",
              "src": "734:154:11",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1141,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "756:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_DogCoinGame_$1187",
                              "typeString": "contract DogCoinGame"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_DogCoinGame_$1187",
                              "typeString": "contract DogCoinGame"
                            }
                          ],
                          "id": 1140,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "748:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1139,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "748:7:11",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "748:13:11",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "762:7:11",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "src": "748:21:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "773:3:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "748:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1158,
                  "nodeType": "IfStatement",
                  "src": "744:138:11",
                  "trueBody": {
                    "id": 1157,
                    "nodeType": "Block",
                    "src": "778:104:11",
                    "statements": [
                      {
                        "assignments": [
                          1147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1147,
                            "mutability": "mutable",
                            "name": "amountToPay",
                            "nameLocation": "800:11:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1157,
                            "src": "792:19:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1146,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "792:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1152,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1148,
                              "name": "winners",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1085,
                              "src": "814:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "822:6:11",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "814:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "831:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "814:20:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "792:42:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1154,
                              "name": "amountToPay",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1147,
                              "src": "859:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1153,
                            "name": "payWinners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1186,
                            "src": "848:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "848:23:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ExpressionStatement",
                        "src": "848:23:11"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "63bd1d4a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payout",
            "nameLocation": "718:6:11",
            "parameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "724:2:11"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:11"
            },
            "scope": 1187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1186,
            "nodeType": "FunctionDefinition",
            "src": "894:155:11",
            "nodes": [],
            "body": {
              "id": 1185,
              "nodeType": "Block",
              "src": "938:111:11",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 1183,
                    "nodeType": "Block",
                    "src": "994:49:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1180,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1162,
                              "src": "1024:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 1176,
                                "name": "winners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1085,
                                "src": "1008:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                  "typeString": "address payable[] storage ref"
                                }
                              },
                              "id": 1178,
                              "indexExpression": {
                                "id": 1177,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1166,
                                "src": "1016:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1008:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1019:4:11",
                            "memberName": "send",
                            "nodeType": "MemberAccess",
                            "src": "1008:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) returns (bool)"
                            }
                          },
                          "id": 1181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1008:24:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1182,
                        "nodeType": "ExpressionStatement",
                        "src": "1008:24:11"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1169,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1166,
                      "src": "968:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 1170,
                        "name": "winners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1085,
                        "src": "973:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 1171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "981:6:11",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "973:14:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "968:19:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1184,
                  "initializationExpression": {
                    "assignments": [
                      1166
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1166,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "961:1:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1184,
                        "src": "953:9:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "953:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1168,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "965:1:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "953:13:11"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "989:3:11",
                      "subExpression": {
                        "id": 1173,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "989:1:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1175,
                    "nodeType": "ExpressionStatement",
                    "src": "989:3:11"
                  },
                  "nodeType": "ForStatement",
                  "src": "948:95:11"
                }
              ]
            },
            "functionSelector": "86e34bc1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payWinners",
            "nameLocation": "903:10:11",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "922:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1186,
                  "src": "914:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "914:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "913:17:11"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "938:0:11"
            },
            "scope": 1187,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1074,
              "name": "ERC20",
              "nameLocations": [
                "137:5:11"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4096,
              "src": "137:5:11"
            },
            "id": 1075,
            "nodeType": "InheritanceSpecifier",
            "src": "137:5:11"
          }
        ],
        "canonicalName": "DogCoinGame",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1187,
          4096,
          4199,
          4174,
          4221
        ],
        "name": "DogCoinGame",
        "nameLocation": "122:11:11",
        "scope": 1188,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 11
}