{
  "abi": [
    {
      "inputs": [],
      "name": "checkEther",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b50607d8061001e6000396000f3fe608060405260043610601c5760003560e01c80634dac873b146021575b600080fd5b60276039565b60405190815260200160405180910390f35b600034604051526020604051f3fea26469706673582212207b44eef527dd6ebd6794aeaccf4624be96aed9882ce097b723a99482a29faf1164736f6c63430008130033",
    "sourceMap": "58:204:9:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405260043610601c5760003560e01c80634dac873b146021575b600080fd5b60276039565b60405190815260200160405180910390f35b600034604051526020604051f3fea26469706673582212207b44eef527dd6ebd6794aeaccf4624be96aed9882ce097b723a99482a29faf1164736f6c63430008130033",
    "sourceMap": "58:204:9:-:0;;;;;;;;;;;;;;;;;;;;;84:176;;;:::i;:::-;;;160:25:27;;;148:2;133:18;84:176:9;;;;;;;;132:7;194:11;187:4;181:11;174:32;239:4;187;226:11;219:25",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "checkEther()": "4dac873b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"checkEther\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Week2/TestYul2.sol\":\"CheckEther\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":800},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=node_modules/forge-std/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solady/=lib/solady/\"]},\"sources\":{\"contracts/Week2/TestYul2.sol\":{\"keccak256\":\"0xbe99a2f8ba6545b9fb49410def5b9d465b84dabb315d5a4013c8bb8f4c5fad80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8474ea384e2a6bfe4372efff81acaea691ee55974e67d1b3fb23a9d393bc54f3\",\"dweb:/ipfs/QmdYAvRbZpD5JuAuSpHdJy5Vr7DGiuktajFgrpfSsFs7Qc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "checkEther",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=node_modules/forge-std/",
        ":hardhat/=node_modules/hardhat/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solady/=lib/solady/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 800
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/Week2/TestYul2.sol": "CheckEther"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/Week2/TestYul2.sol": {
        "keccak256": "0xbe99a2f8ba6545b9fb49410def5b9d465b84dabb315d5a4013c8bb8f4c5fad80",
        "urls": [
          "bzz-raw://8474ea384e2a6bfe4372efff81acaea691ee55974e67d1b3fb23a9d393bc54f3",
          "dweb:/ipfs/QmdYAvRbZpD5JuAuSpHdJy5Vr7DGiuktajFgrpfSsFs7Qc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/Week2/TestYul2.sol",
    "id": 1000,
    "exportedSymbols": {
      "CheckEther": [
        999
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:230:9",
    "nodes": [
      {
        "id": 991,
        "nodeType": "PragmaDirective",
        "src": "32:24:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 999,
        "nodeType": "ContractDefinition",
        "src": "58:204:9",
        "nodes": [
          {
            "id": 998,
            "nodeType": "FunctionDefinition",
            "src": "84:176:9",
            "nodes": [],
            "body": {
              "id": 997,
              "nodeType": "Block",
              "src": "141:119:9",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "160:94:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "187:4:9",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "181:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "181:11:9"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "callvalue",
                                "nodeType": "YulIdentifier",
                                "src": "194:9:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "194:11:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "174:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "174:32:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "174:32:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "232:4:9",
                                  "type": "",
                                  "value": "0x40"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "226:5:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "226:11:9"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "239:4:9",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "219:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "219:25:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "219:25:9"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [],
                  "id": 996,
                  "nodeType": "InlineAssembly",
                  "src": "151:103:9"
                }
              ]
            },
            "functionSelector": "4dac873b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkEther",
            "nameLocation": "93:10:9",
            "parameters": {
              "id": 992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "103:2:9"
            },
            "returnParameters": {
              "id": 995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 994,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 998,
                  "src": "132:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 993,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "132:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "131:9:9"
            },
            "scope": 999,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CheckEther",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          999
        ],
        "name": "CheckEther",
        "nameLocation": "67:10:9",
        "scope": 1000,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 9
}